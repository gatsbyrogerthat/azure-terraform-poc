name: Deploy to Azure

# When to run this workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Deploy Infrastructure'
    runs-on: ubuntu-latest
    
    # Set working directory for all terraform commands
    defaults:
      run:
        working-directory: terraform
        
    steps:
    # Step 1: Get the code from GitHub
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    # Step 3: Login to Azure
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
          }

    - name: Setup Terraform Backend Auth
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

    # Step 4: Check Terraform formatting
    - name: Terraform Format Check
      run: terraform fmt -check
      continue-on-error: true

    # Step 5: Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Step 6: Validate Terraform files
    - name: Terraform Validate
      run: terraform validate

    # Step 7: Plan what Terraform will do
    - name: Terraform Plan
      run: terraform plan -no-color

    # Step 8: Apply changes (only when pushing to main branch)
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

    # Step 9: Show the website URL
    - name: Show Website URL
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "ðŸŽ‰ Deployment complete!"
        echo "Your website is available at:"
        terraform output -raw website_url